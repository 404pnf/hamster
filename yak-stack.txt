* Make List#size not O(n)!
* Add List #hash, #fill, #sample, #insert, #insert_by, #to_set, #permutation (aliased as #permutations), #subsequences, #transpose
* Add Set #hash, #one?, #cycle, #sample, #max(imum), #min(imum), #flatten
* Add Hash #hash, #count, #partition, #one?, #sort, #sort_by, #max(imum), #min(imum), #cycle, #clear
* Implement Set#subset?
* Implement Set#superset?
* Implement Set#^ as equivalent to ((set | enum) - (set & enum))
* Implement Hash#merge
* Work out what we can extract into common "Enumerable-like" code.
* Generate spec docs
* Add missing immutability tests to Set
* Add missing immutability tests to Hash
* Add missing immutability tests to Stack
* Re-write Trie test-first (it was only a spike)
* Allow Trie to efficiently add multiple pairs in one go
* Implement Vector (using a Trie and integer keys?)
* Implement a queue?
